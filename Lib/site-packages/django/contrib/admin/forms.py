from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.decorators import login_required
from .models import CompanyProfile, JobPosting, AccreditationRequest, Applicant, SavedCandidate
from .forms import CompanyProfileForm, JobPostingForm, AccreditationRequestForm, ApplicantForm, SavedCandidateForm

# CompanyProfile view
@login_required
def update_company_profile(request, pk):
    company_profile = get_object_or_404(CompanyProfile, pk=pk)
    if request.method == 'POST':
        form = CompanyProfileForm(request.POST, instance=company_profile)
        if form.is_valid():
            form.save()
            return redirect('company_profile_detail', pk=pk)  # Redirect to detail view or list view
    else:
        form = CompanyProfileForm(instance=company_profile)
    return render(request, 'update_company_profile.html', {'form': form})

# JobPosting views
@login_required
def create_job_posting(request):
    if request.method == 'POST':
        form = JobPostingForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('job_posting_list')  # Change to your list view
    else:
        form = JobPostingForm()
    return render(request, 'create_job_posting.html', {'form': form})

@login_required
def update_job_posting(request, pk):
    job_posting = get_object_or_404(JobPosting, pk=pk)
    if request.method == 'POST':
        form = JobPostingForm(request.POST, instance=job_posting)
        if form.is_valid():
            form.save()
            return redirect('job_posting_list')
    else:
        form = JobPostingForm(instance=job_posting)
    return render(request, 'update_job_posting.html', {'form': form})

# AccreditationRequest views
@login_required
def create_accreditation_request(request):
    if request.method == 'POST':
        form = AccreditationRequestForm(request.POST, request.FILES)
        if form.is_valid():
            form.save()
            return redirect('accreditation_request_list')  # Change to your list view
    else:
        form = AccreditationRequestForm()
    return render(request, 'create_accreditation_request.html', {'form': form})

@login_required
def update_accreditation_request(request, pk):
    accreditation_request = get_object_or_404(AccreditationRequest, pk=pk)
    if request.method == 'POST':
        form = AccreditationRequestForm(request.POST, request.FILES, instance=accreditation_request)
        if form.is_valid():
            form.save()
            return redirect('accreditation_request_list')
    else:
        form = AccreditationRequestForm(instance=accreditation_request)
    return render(request, 'update_accreditation_request.html', {'form': form})

# Applicant views
@login_required
def update_applicant_resume(request):
    try:
        applicant = Applicant.objects.get(user=request.user)
    except Applicant.DoesNotExist:
        return redirect('create_applicant')  # Redirect to applicant creation if needed

    if request.method == 'POST':
        form = ApplicantForm(request.POST, request.FILES, instance=applicant)
        if form.is_valid():
            form.save()
            return redirect('applicant_detail')  # Change to your detail view
    else:
        form = ApplicantForm(instance=applicant)
    return render(request, 'update_applicant_resume.html', {'form': form})

# SavedCandidate views
@login_required
def save_candidate(request, job_id, applicant_id):
    job_posting = get_object_or_404(JobPosting, id=job_id)
    applicant = get_object_or_404(Applicant, id=applicant_id)
    
    SavedCandidate.objects.create(job_posting=job_posting, applicant=applicant)
    return redirect('saved_candidates_list')  # Change to your list view
